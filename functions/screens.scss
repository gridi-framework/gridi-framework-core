/**
 * return screens map
 *
 * @function
 * @param {string|list} [skip-screens-prefixes=null]  - extension of the skip standard screens prefixes when generate map
 * @return map
 */
@function get-screens-map($skip-screens-prefixes: null) {
    $screens-sizes-map: $screens-sizes;

    @if type-of($skip-screens-prefixes) == string {
        $screens-sizes-map: map-remove($screens-sizes-map, $skip-screens-prefixes);
    }

    @if type-of($skip-screens-prefixes) == list {
        @each $screen-prefix in $skip-screens-prefixes {
            $screens-sizes-map: map-remove($screens-sizes-map, $screen-prefix);
        }
    }
    @return $screens-sizes-map;
}

/**
 * return screens prefixes list
 *
 * @function
 * @param {string|list} [skip-screens-prefixes=null]  - extension of the skip standard screens prefixes when generate map
 * @return map
 */
@function get-screens-prefixes($skip-screens-prefixes: null) {
    @return map-keys(get-screens-map($skip-screens-prefixes));
}

/**
 * Retrieves a screen value from the $screens sass map
 *
 * @function
 * @param {string} size prefix         - lower-case size prefix
 * @param {string} [size-variant=min]  - lowercase size variant
 * @param {map} [size-map=$screens]  - sass size map
 * @return string
 */
@function get-screen-size($size-prefix, $size-variant: min, $sizes-map: $screens-sizes) {
    $size-map: map-get($sizes-map, $size-prefix);
    @if $size-map == null {
        @error "=> ERROR: SIZE MAP NOT FOUND! <= | Size prefix: #{$size-prefix}, Size variant: #{$size-variant}";
    }
    $size: map-get($size-map, $size-variant);
    @if $size {
         @return $size;
    } @else {
        @error "=> ERROR: SIZE NOT FOUND! <= | Size prefix: #{$size-prefix}, Size variant: #{$size-variant}";
    }
}
