@mixin include-single-property-with-screens-support($property, $value, $values-for-screens) {
    #{$property}: #{$value};
    @if is-map($values-for-screens) {
        @each $screen-prefix, $sizes in get-screens-map() {
            @if map-has-key($values-for-screens, $screen-prefix) {
                @media(min-width: get-screen-size($screen-prefix, min)) {
                    #{$property}: map-get($values-for-screens, $screen-prefix);
                }
            }
        }
    }
}

@mixin include-margin($margin-top, $margin-bottom, $margin-left, $margin-right) {
    @if $margin-top and $margin-bottom and $margin-left and $margin-right {
        @if ($margin-top == $margin-bottom and $margin-top == $margin-left and $margin-top == $margin-right) {
            margin: $margin-top;
        } @else if ($margin-top == $margin-bottom and  $margin-left == $margin-right) {
            margin: $margin-top $margin-left;
        } @else if ($margin-top != $margin-bottom and  $margin-left == $margin-right) {
            margin: $margin-top $margin-left $margin-bottom;
        } @else {
            margin: $margin-top $margin-right $margin-bottom $margin-left;
        }
    } @else {
        @if $margin-top {
            margin-top: $margin-top;
        }

        @if $margin-bottom {
            margin-bottom: $margin-bottom;
        }

        @if $margin-left {
            margin-left: $margin-left;
        }

        @if $margin-right {
            margin-right: $margin-right;
        }
    }
}

@mixin include-element-margin($margin-top: null, $margin-bottom: null, $margin-left: null, $margin-right: null, $margin-for-screens: null) {
    @include include-margin($margin-top, $margin-bottom, $margin-left, $margin-right);

    @if is-map($margin-for-screens) {
        @each $screen-prefix, $sizes in get-screens-map() {
            @if map-has-key($margin-for-screens, $screen-prefix) {
                @media(min-width: get-screen-size($screen-prefix, min)) {
                    $screen-margins: map-get($margin-for-screens, $screen-prefix);
                    @include include-margin(map-get($screen-margins, top), map-get($screen-margins, bottom), map-get($screen-margins, left), map-get($screen-margins, right));
                }
            }
        }
    }
}

@mixin include-padding($padding-top, $padding-bottom, $padding-left, $padding-right) {
    @if $padding-top and $padding-bottom and $padding-left and $padding-right {
        @if ($padding-top == $padding-bottom and $padding-top == $padding-left and $padding-top == $padding-right) {
            padding: $padding-top;
        } @else if ($padding-top == $padding-bottom and  $padding-left == $padding-right) {
            padding: $padding-top $padding-left;
        } @else if ($padding-top != $padding-bottom and  $padding-left == $padding-right) {
            padding: $padding-top $padding-left $padding-bottom;
        } @else {
            padding: $padding-top $padding-right $padding-bottom $padding-left;
        }
    } @else {
        @if $padding-top {
            padding-top: $padding-top;
        }

        @if $padding-bottom {
            padding-bottom: $padding-bottom;
        }

        @if $padding-left {
            padding-left: $padding-left;
        }

        @if $padding-right {
            padding-right: $padding-right;
        }
    }
}

@mixin include-element-padding($padding-top: null, $padding-bottom: null, $padding-left: null, $padding-right: null, $padding-for-screens: null) {
    @include include-padding($padding-top, $padding-bottom, $padding-left, $padding-right);

    @if is-map($padding-for-screens) {
        @each $screen-prefix, $sizes in get-screens-map() {
            @if map-has-key($padding-for-screens, $screen-prefix) {
                @media(min-width: get-screen-size($screen-prefix, min)) {
                    $screen-paddings: map-get($padding-for-screens, $screen-prefix);
                    @include include-padding(map-get($screen-paddings, top), map-get($screen-paddings, bottom), map-get($screen-paddings, left), map-get($screen-paddings, right));
                }
            }
        }
    }
}