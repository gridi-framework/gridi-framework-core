/**
 * Check is property exist in map and include with value
 *
 * @mixin
 * @param {map} map - map with propertys
 * @param property - property name
 * @param [value-key=null] - key in map for ger value for property
 */
@mixin property-from-map($map, $property, $value-key: null) {
    $map-key: $property;

    @if $value-key {
        $map-key: $value-key;
    }

    @if is-map($map) and map-has-key($map, $map-key) and map-get($map, $map-key) {
        #{$property}: map-get($map, $map-key);
    }
}

/**
 * Include single property with value. if value is null then not add anything
 *
 * @mixin
 * @param property - property name
 * @param value - property value | null
 */
@mixin not-required-property($property, $value) {
    @if $value {
        #{$property}: #{$value};
    }
}

/**
 * Include single property with value and single property with value for screens based on sent config
 *
 * @mixin
 * @param property - property name
 * @param value - property value
 * @param {map} values-for-screens -  map with screens prefixes and property values
 */
@mixin single-property-with-screens-support($property, $value, $values-for-screens) {
    @include not-required-property($property, $value);

    @if is-map($values-for-screens) {
        @each $screen-prefix, $sizes in get-screens-map() {
            @if map-has-key($values-for-screens, $screen-prefix) {
                @media(min-width: get-screen-size($screen-prefix, min)) {
                    @include not-required-property($property, map-get($values-for-screens, $screen-prefix));
                }
            }
        }
    }
}