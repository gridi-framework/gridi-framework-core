//tranform-style
@mixin transform-style($value: flat, $settings: ()) {
    $settings: map-merge((
        browsers-prefixes: $css3-transform-browsers-prefixes,
        use-prefixes: $css3-transform-use-prefixes
	), $settings);
	
    @include property-with-browsers-prefixes(transform-style, $value, $settings);
}

//perspective
@mixin perspective($value: none, $settings: ()) {
    $settings: map-merge((
        browsers-prefixes: $css3-transform-browsers-prefixes,
        use-prefixes: $css3-transform-use-prefixes
	), $settings);
	
    @include property-with-browsers-prefixes(perspective, $value, $settings);
}

//perspective-origin
@mixin perspective-origin($value, $settings: ()) {
    $settings: map-merge((
        browsers-prefixes: $css3-transform-browsers-prefixes,
        use-prefixes: $css3-transform-use-prefixes
	), $settings);
	
    @include property-with-browsers-prefixes(perspective-origin, $value, $settings);
}

//transforms
@mixin transform-3d-matrix3d($value, $settings: ()) {
    $settings: map-merge((
        browsers-prefixes: $css3-transform-browsers-prefixes,
        use-prefixes: $css3-transform-use-prefixes
	), $settings);
	
	@include transform(matrix3d(#{$value}), $settings);
}

@mixin transform-3d-translate3d($value, $settings: ()) {
    $settings: map-merge((
        browsers-prefixes: $css3-transform-browsers-prefixes,
        use-prefixes: $css3-transform-use-prefixes
	), $settings);
	
	@include transform(translate3d(#{$value}), $settings);
}

@mixin transform-3d-translateX($value, $settings: ()) {
    $settings: map-merge((
        browsers-prefixes: $css3-transform-browsers-prefixes,
        use-prefixes: $css3-transform-use-prefixes
	), $settings);
	
	@include transform(translateX(#{$value}), $settings);
}

@mixin transform-3d-translateY($value, $settings: ()) {
    $settings: map-merge((
        browsers-prefixes: $css3-transform-browsers-prefixes,
        use-prefixes: $css3-transform-use-prefixes
	), $settings);
	
	@include transform(translateY(#{$value}), $settings);
}

@mixin transform-3d-translateZ($value, $settings: ()) {
    $settings: map-merge((
        browsers-prefixes: $css3-transform-browsers-prefixes,
        use-prefixes: $css3-transform-use-prefixes
	), $settings);
	
	@include transform(translateZ(#{$value}), $settings);
}

@mixin transform-3d-scale3d($value, $settings: ()) {
    $settings: map-merge((
        browsers-prefixes: $css3-transform-browsers-prefixes,
        use-prefixes: $css3-transform-use-prefixes
	), $settings);
	
	@include transform(scale3d(#{$value}), $settings);
}

@mixin transform-3d-scaleX($value, $settings: ()) {
    $settings: map-merge((
        browsers-prefixes: $css3-transform-browsers-prefixes,
        use-prefixes: $css3-transform-use-prefixes
	), $settings);
	
	@include transform(scaleX(#{$value}), $settings);
}

@mixin transform-3d-scaleY($value, $settings: ()) {
    $settings: map-merge((
        browsers-prefixes: $css3-transform-browsers-prefixes,
        use-prefixes: $css3-transform-use-prefixes
	), $settings);
	
	@include transform(scaleY(#{$value}), $settings);
}

@mixin transform-3d-scaleZ($value, $settings: ()) {
    $settings: map-merge((
        browsers-prefixes: $css3-transform-browsers-prefixes,
        use-prefixes: $css3-transform-use-prefixes
	), $settings);
	
	@include transform(scaleZ(#{$value}), $settings);
}

@mixin transform-3d-rotate3d($value, $settings: ()) {
    $settings: map-merge((
        browsers-prefixes: $css3-transform-browsers-prefixes,
        use-prefixes: $css3-transform-use-prefixes
	), $settings);
	
	@include transform(rotate3d(#{$value}), $settings);
}

@mixin transform-3d-rotateX($value, $settings: ()) {
    $settings: map-merge((
        browsers-prefixes: $css3-transform-browsers-prefixes,
        use-prefixes: $css3-transform-use-prefixes
	), $settings);
	
	@include transform(rotateX(#{$value}), $settings);
}

@mixin transform-3d-rotateY($value, $settings: ()) {
    $settings: map-merge((
        browsers-prefixes: $css3-transform-browsers-prefixes,
        use-prefixes: $css3-transform-use-prefixes
	), $settings);
	
	@include transform(rotateY(#{$value}), $settings);
}

@mixin transform-3d-rotateZ($value, $settings: ()) {
    $settings: map-merge((
        browsers-prefixes: $css3-transform-browsers-prefixes,
        use-prefixes: $css3-transform-use-prefixes
	), $settings);
	
	@include transform(rotateZ(#{$value}), $settings);
}

@mixin transform-3d-perspective($value, $settings: ()) {
    $settings: map-merge((
        browsers-prefixes: $css3-transform-browsers-prefixes,
        use-prefixes: $css3-transform-use-prefixes
	), $settings);
	
	@include transform(perspective(#{$value}), $settings);
}